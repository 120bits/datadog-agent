version: '{branch}.{build}'
shallow_clone: false
platform: x64
skip_branch_with_pr: true

environment:
  GOPATH: C:\gopath
  # Give hints to CMake to find Pythons
  Python2_ROOT_DIR: C:\Python27-x64
  Python3_ROOT_DIR: C:\Python37-x64

install:
  - set PATH=%APPVEYOR_BUILD_FOLDER%\bin;%GOPATH%\bin;C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin\;c:\msys64\mingw64\bin;C:\Python27-x64;c:\python27-x64\scripts;c:\python37-x64;c:\python37-x64\scripts;%PATH%
  - go version
  - python --version
  - c:\python37-x64\python --version
  - gcc --version
  - git clone --depth 1 https://github.com/datadog/integrations-core
  - pip install pyyaml requests prometheus_client six
  - pip3 install pyyaml requests prometheus_client six
  - pip install integrations-core/datadog_checks_base/
  - pip3 install integrations-core/datadog_checks_base/
  - pip install -r integrations-core\directory\requirements.in
  - pip3 install -r integrations-core\directory\requirements.in
  - pip install integrations-core/directory/
  - pip3 install integrations-core/directory/
  # Following is needed by CMake that would refuse to generate "MinGW Makefiles" otherwise
  - del "C:\Program Files\Git\usr\bin\sh.exe"

cache:
  - '%LOCALAPPDATA%\pip\Cache'

build: off

test_script:
  - cmake -G "MinGW Makefiles" .
  - mingw32-make clang-format
  - mingw32-make
  - mingw32-make -C test run
  - bin\demo 2
  - bin\demo 3

# uncomment to debug builds
# on_finish:
#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
